
package Filter;

import java.util.List;
import java.util.Map;
import RESEARCHER.Filter;
import RESEARCHER.Visualise;
import static RESEARCHER.Visualise.result;
import Research.VariableFrame;
import Research.VariableSelect;
import Research.VariableSelectFrame;
import Research.VariableSelection;
import javax.swing.JOptionPane;


public class FilterFrame extends javax.swing.JFrame {
    private boolean Nofilter = false;
    private boolean IMfilter = false;
    private boolean RQfilter = false;
    private boolean FiO2filter = false;
    private boolean PEEPfilter = false;
    
    private static Map<String, List<Object>> SelectedData;
    public FilterFrame(Map<String, List<Object>> SelectedData) {
        this.SelectedData = SelectedData;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        RQ = new javax.swing.JCheckBox();
        IM = new javax.swing.JCheckBox();
        NoFilter = new javax.swing.JCheckBox();
        FiO2 = new javax.swing.JCheckBox();
        PEEP = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        RQlow = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FiO2val = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PEEPval = new javax.swing.JTextField();
        RQhigh = new javax.swing.JTextField();
        TestFilter = new javax.swing.JButton();
        SelectFilter = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TestField = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setText("StatMedX");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Please select filter ");

        RQ.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        RQ.setText("RQ filter");
        RQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RQActionPerformed(evt);
            }
        });

        IM.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        IM.setText("IM filter");

        NoFilter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        NoFilter.setText("No filter");
        NoFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoFilterActionPerformed(evt);
            }
        });

        FiO2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        FiO2.setText("FiO2 filter ");

        PEEP.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        PEEP.setText("PEEP filter");
        PEEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PEEPActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("- exclude data with a RQ value outside the range ");

        RQlow.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        RQlow.setText("0.7");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("and");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("- exclude data with a PEEP value above ");

        FiO2val.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        FiO2val.setText("0.6");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("cmH20");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("- exclude data with a PEEP value above ");

        PEEPval.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        PEEPval.setText("10");

        RQhigh.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        RQhigh.setText("1.0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(FiO2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FiO2val, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(PEEP)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PEEPval, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IM)
                                    .addComponent(RQ))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(RQlow, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RQhigh, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(NoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(NoFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(IM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RQ)
                        .addComponent(RQlow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(RQhigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PEEP)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(PEEPval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FiO2)
                    .addComponent(jLabel7)
                    .addComponent(FiO2val, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TestFilter.setBackground(new java.awt.Color(102, 153, 255));
        TestFilter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        TestFilter.setText("Test filter");

        SelectFilter.setBackground(new java.awt.Color(102, 153, 255));
        SelectFilter.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        SelectFilter.setText("Select filter");
        SelectFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectFilterActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(102, 153, 255));
        Back.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Back.setText("Back");

        TestField.setBackground(new java.awt.Color(153, 204, 255));
        TestField.setColumns(20);
        TestField.setRows(5);
        jScrollPane1.setViewportView(TestField);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setText("Test of filter");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addComponent(TestFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SelectFilter)
                .addGap(67, 67, 67))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(418, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TestFilter)
                    .addComponent(Back)
                    .addComponent(SelectFilter))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PEEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PEEPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PEEPActionPerformed

    private void RQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RQActionPerformed
        // TODO add your handling code here:
        if(RQ.isSelected()){
            RQfilter = true;
        }
        else{
            RQfilter = false;
        }
    }//GEN-LAST:event_RQActionPerformed

    private void SelectFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectFilterActionPerformed
        // TODO add your handling code here:
        
 if(Nofilter==false && RQfilter==false && IMfilter ==false && PEEPfilter==false &&FiO2filter==false){
     String message = "Please choose a filter before continuing";
     JOptionPane.showMessageDialog(this, message);
 }
 
 else if(Nofilter ==true){
  Map<String, List<Object>> Filterdata = SelectedData;
  System.out.println(Filterdata);
 }
 
 else if(RQfilter == true){
// Apply the filter to the result map
double rqLow = Double.parseDouble(RQlow.getText());
double rqHigh = Double.parseDouble(RQhigh.getText());
        //RQFilter Filter = new Filter();
Map<String, List<Object>> Filterdata = Filter.filterData(SelectedData, rqLow, rqHigh);
// Print the filtered data
for (Map.Entry<String, List<Object>> entry : Filterdata.entrySet()) {
    System.out.println(entry.getKey() + ":");
// Loop through each data item in the list and print its contents
    List<Object> dataList = entry.getValue();
    for (Object data : dataList) {
        if (data instanceof Map) {
            Map<String, Object> dataMap = (Map<String, Object>) data;
            for (Map.Entry<String, Object> dataEntry : dataMap.entrySet()) {
                System.out.println("  " + dataEntry.getKey() + ": " + dataEntry.getValue());
            }
        }
    }
    }
//VariableSelection.VariableSelecter(Filterdata); 
// Create a new varibleframe and tranfer the selected data
       VariableFrame variableFrame = new VariableFrame(Filterdata);
       variableFrame.setVisible(true);
       dispose();
        
       
//System.out.println(Filterdata);
//VariableSelect.printData(Filterdata);
//VariableSelect.VariableSelecter(Filterdata);
 } 

    }//GEN-LAST:event_SelectFilterActionPerformed

    private void NoFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoFilterActionPerformed
        // TODO add your handling code here:
        if(NoFilter.isSelected()){
            Nofilter = true;
        }
        else{
            Nofilter = false;
        }
    }//GEN-LAST:event_NoFilterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilterFrame(SelectedData).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JCheckBox FiO2;
    private javax.swing.JTextField FiO2val;
    private javax.swing.JCheckBox IM;
    private javax.swing.JCheckBox NoFilter;
    private javax.swing.JCheckBox PEEP;
    private javax.swing.JTextField PEEPval;
    private javax.swing.JCheckBox RQ;
    private javax.swing.JTextField RQhigh;
    private javax.swing.JTextField RQlow;
    private javax.swing.JButton SelectFilter;
    private javax.swing.JTextArea TestField;
    private javax.swing.JButton TestFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
